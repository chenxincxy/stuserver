<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.network.good.mapper.GOrderDao">

    <select id="selectById" resultType="com.network.api.beans.GOrder">
     select a.*,
 		 b.id  "user.id",
       b.name "user.name",
       b.password "user.password",
       b.address "user.address",
       b.phone "user.phone",
       c.id "good.id",
       c.name "good.name",
       c.glist_id "good.glistid",
       c.price "good.price",
       c.description "good.description",
       c.picture "good.picture"
        from  gd_order a,t_user b,gd_information c
        where a.consumer_id=b.id  and a.gd_id=c.id and a.id=#{id};
    </select>

    <select id="selectAll" resultType="com.network.api.beans.GOrder">
        select a.*,
       b.name "user.name",
       c.id "good.id",
       c.name "good.name",
       c.glist_id "good.glistid",
       c.price "good.price",
       c.description "good.description",
       c.picture "good.picture"
        from  gd_order a,t_user b,gd_information c
        where a.consumer_id=b.id  and a.gd_id=c.id;
    </select>

    <select id="selectOrdersByPage" resultType="com.network.api.beans.GOrder">
        select a.*,
       b.name "user.name",
       c.id "good.id",
       c.name "good.name",
       c.glist_id "good.glistid",
       c.price "good.price",
       c.description "good.description",
       c.picture "good.picture"
        from  gd_order a,t_user b,gd_information c
        where a.consumer_id=b.id  and a.gd_id=c.id
        limit #{start},#{end};
    </select>

    <select id="getTotalLines" resultType="Integer">
    select count(*)
    from gd_order ;
    </select>

    <delete id="deleteById">
        delete from gd_order where id=#{id};
    </delete>

    <insert id="saveGOrder" parameterType="com.network.api.beans.GOrder">
       insert into gd_order (total, provider_id, consumer_id, gd_date, gd_id, paymentstatus, orderstatus, shipstatus,username,useraddress,userphone) VALUES (#{total}, #{providerid}, #{consumerid},curdate(), #{gdid},#{paymentstatus}, #{orderstatus}, #{shipstatus},#{username},#{useraddress},#{userphone});
    </insert>

    <update id="updateGOrder" parameterType="com.network.api.beans.GOrder">
        update gd_order set gd_id=#{gdid},paymentstatus=#{paymentstatus},username=#{username},userphone=#{userphone},gd_order.useraddress=#{useraddress}
        where id=#{id};
    </update>

    <update id="updateByLogi" parameterType="com.network.api.beans.GOrder">
        update gd_order set total=#{total},shipstatus=#{shipstatus}
        where id=#{id};
    </update>

    <select id="searchByStartDate" resultType="com.network.api.beans.GOrder">
        select a.*,
 		 b.id  "user.id",
       c.name "good.name"
        from  gd_order a,t_user b,gd_information c
        where a.consumer_id=b.id  and a.gd_id=c.id and
		  a.gd_date>=#{startdate}
		  limit #{start},#{end};
    </select>
    <select id="searchByEndDate" resultType="com.network.api.beans.GOrder">
        select a.*,
 		 b.id  "user.id",
       c.name "good.name"
        from  gd_order a,t_user b,gd_information c
        where a.consumer_id=b.id  and a.gd_id=c.id and
		  a.gd_date&lt;=#{enddate}
		  limit #{start},#{end};
    </select>

    <select id="searchByDate" resultType="com.network.api.beans.GOrder">
        select a.*,
        b.id  "user.id",
        c.name "good.name"
        from  gd_order a,t_user b,gd_information c
        where a.consumer_id=b.id  and a.gd_id=c.id and
        a.gd_date between #{startdate} and #{enddate}
        limit #{start},#{end};
    </select>

</mapper>